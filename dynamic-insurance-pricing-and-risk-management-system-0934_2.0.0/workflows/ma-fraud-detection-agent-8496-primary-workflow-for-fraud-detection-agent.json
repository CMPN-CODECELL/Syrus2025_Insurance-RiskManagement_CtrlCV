{
  "_id": "342324be-d246-40dc-ae4c-a9bfa710c1e6",
  "aiPersonaId": "02dadf3f-14fb-4a70-87bb-0f654e7de478",
  "integrationId": "ma-fraud-detection-agent-8496-primary-workflow-for-fraud-detection-agent",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Fraud Detection Agent",
  "publisherAccountId": "27f7f6e9-1218-41b8-b4d4-107d247993b7",
  "startTaskId": "1877bfe3-aeff-45ca-9499-078b6d58d056",
  "status": "Active",
  "tasks": [
    {
      "_id": "1877bfe3-aeff-45ca-9499-078b6d58d056",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "b87c5d7d-4590-4023-8034-b604ee1d2939-1877bfe3-aeff-45ca-9499-078b6d58d056",
          "nextTask": "b87c5d7d-4590-4023-8034-b604ee1d2939",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "115f1a92-adb2-4ce0-b41e-e121221309ce-1877bfe3-aeff-45ca-9499-078b6d58d056",
          "nextTask": "115f1a92-adb2-4ce0-b41e-e121221309ce",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "1877bfe3-aeff-45ca-9499-078b6d58d056-a114dd14-79fe-4be2-b3eb-c72f1e400ade",
          "name": "If query exists",
          "nextTask": "a114dd14-79fe-4be2-b3eb-c72f1e400ade",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "b87c5d7d-4590-4023-8034-b604ee1d2939",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "b87c5d7d-4590-4023-8034-b604ee1d2939-a114dd14-79fe-4be2-b3eb-c72f1e400ade",
          "name": "Default",
          "nextTask": "a114dd14-79fe-4be2-b3eb-c72f1e400ade"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "a114dd14-79fe-4be2-b3eb-c72f1e400ade",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "a114dd14-79fe-4be2-b3eb-c72f1e400ade-1eab58fd-6648-4441-a1f6-1a9b53492652",
          "name": "Default",
          "nextTask": "1eab58fd-6648-4441-a1f6-1a9b53492652"
        }
      ]
    },
    {
      "_id": "1eab58fd-6648-4441-a1f6-1a9b53492652",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "4cf651d9-edf3-455f-a22e-53cc67fcc07b",
        "intents": [
          {
            "name": "Detect Fraudulent Claims",
            "description": "Analyzes submitted claims and associated data to identify anomalies and potential fraud.",
            "examples": [
              "Is there any suspicious activity in the latest claim submission?",
              "Analyze this medical report for inconsistencies.",
              "Flag any anomalies in the financial data of this claim."
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "1eab58fd-6648-4441-a1f6-1a9b53492652-115f1a92-adb2-4ce0-b41e-e121221309ce",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "115f1a92-adb2-4ce0-b41e-e121221309ce"
        },
        {
          "_id": "1eab58fd-6648-4441-a1f6-1a9b53492652-c3f4b427-43b4-4d19-91d4-92e03407e0b6",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "c3f4b427-43b4-4d19-91d4-92e03407e0b6"
        }
      ]
    },
    {
      "_id": "115f1a92-adb2-4ce0-b41e-e121221309ce",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "115f1a92-adb2-4ce0-b41e-e121221309ce-766770bc-2dcb-4ef8-9338-dec14f082123",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Detect Fraudulent Claims"
            }
          ],
          "nextTask": "766770bc-2dcb-4ef8-9338-dec14f082123"
        },
        {
          "_id": "115f1a92-adb2-4ce0-b41e-e121221309ce-b87c5d7d-4590-4023-8034-b604ee1d2939",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "b87c5d7d-4590-4023-8034-b604ee1d2939"
        }
      ]
    },
    {
      "_id": "766770bc-2dcb-4ef8-9338-dec14f082123",
      "type": "Workflow",
      "config": {
        "name": "Intent - Detect Fraudulent Claims",
        "description": "Workflow for intent - Detect Fraudulent Claims",
        "workflowId": "e304fc15-c25b-4c19-ae37-204bacde2e57"
      },
      "transitions": [
        {
          "_id": "766770bc-2dcb-4ef8-9338-dec14f082123-115f1a92-adb2-4ce0-b41e-e121221309ce",
          "name": "Mini agent execution completed",
          "nextTask": "115f1a92-adb2-4ce0-b41e-e121221309ce"
        }
      ]
    },
    {
      "_id": "c3f4b427-43b4-4d19-91d4-92e03407e0b6",
      "transitions": [
        {
          "_id": "c3f4b427-43b4-4d19-91d4-92e03407e0b6-b87c5d7d-4590-4023-8034-b604ee1d2939",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "b87c5d7d-4590-4023-8034-b604ee1d2939"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "d159b479-87a8-4ac4-92c8-f228f860a2ed",
      "transitions": [
        {
          "_id": "d159b479-87a8-4ac4-92c8-f228f860a2ed-b87c5d7d-4590-4023-8034-b604ee1d2939",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "b87c5d7d-4590-4023-8034-b604ee1d2939"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}